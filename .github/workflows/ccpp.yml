name: Swupd tests

on: [push, pull_request]
env:
   RUNNING_IN_CI: true
   NUM_JOBS: 10

jobs:
  unit_and_style:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
    - uses: actions/checkout@v1

    - name: build
      run:  scripts/github_actions/build_ci_style.bash

    - name: check style
      run:  make compliant && make shellcheck && make docs-coverage

    - name: check install
      run:  sudo make install && make install-check

    - name: run unit tests
      run:  make check

    - name: run distcheck
      run:  make distcheck

    - name: Validate bats tests
      run:  |
             TESTS=$(for i in $(seq $NUM_JOBS); do scripts/github_actions/filter_bats_list.bash $i $NUM_JOBS; done|wc -l)
             TOTAL=$(find test/functional/ -name "*.bats" | wc -l)
             if [ "$TOTAL" -ne "$TESTS" ]; then
                 echo "Error in filter_bats_test.bash script"
                 exit 1
             fi

    - name: print status
      if: failure()
      run: cat test-suite.log

  test_job1:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    env:
       JOB_NUMBER: 1
    steps:
    - uses: actions/checkout@v1

    - name: build
      run:  scripts/github_actions/build_ci.bash

    - name: Run prereq
      run:  test/functional/generate-cert.prereq

    - name: run check
      run: |
            FILES="$(scripts/github_actions/filter_bats_list.bash $JOB_NUMBER $NUM_JOBS)"
            NUM_FILES="$(echo $FILES | tr ' ' '\n' | wc -l)"
            echo "Running $NUM_FILES tests"
            env TESTS="$(echo $FILES)" make -e -j2 check

    - name: print status
      if: failure()
      run: cat test-suite.log

  test_job2:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    env:
       JOB_NUMBER: 2
    steps:
    - uses: actions/checkout@v1

    - name: build
      run:  scripts/github_actions/build_ci.bash

    - name: Run prereq
      run:  test/functional/generate-cert.prereq

    - name: run check
      run: |
            FILES="$(scripts/github_actions/filter_bats_list.bash $JOB_NUMBER $NUM_JOBS)"
            NUM_FILES="$(echo $FILES | tr ' ' '\n' | wc -l)"
            echo "Running $NUM_FILES tests"
            env TESTS="$(echo $FILES)" make -e -j2 check

    - name: print status
      if: failure()
      run: cat test-suite.log

  test_job3:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    env:
       JOB_NUMBER: 3
    steps:
    - uses: actions/checkout@v1

    - name: build
      run:  scripts/github_actions/build_ci.bash

    - name: Run prereq
      run:  test/functional/generate-cert.prereq

    - name: run check
      run: |
            FILES="$(scripts/github_actions/filter_bats_list.bash $JOB_NUMBER $NUM_JOBS)"
            NUM_FILES="$(echo $FILES | tr ' ' '\n' | wc -l)"
            echo "Running $NUM_FILES tests"
            env TESTS="$(echo $FILES)" make -e -j2 check

    - name: print status
      if: failure()
      run: cat test-suite.log

  test_job4:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    env:
       JOB_NUMBER: 4
    steps:
    - uses: actions/checkout@v1

    - name: build
      run:  scripts/github_actions/build_ci.bash

    - name: Run prereq
      run:  test/functional/generate-cert.prereq

    - name: run check
      run: |
            FILES="$(scripts/github_actions/filter_bats_list.bash $JOB_NUMBER $NUM_JOBS)"
            NUM_FILES="$(echo $FILES | tr ' ' '\n' | wc -l)"
            echo "Running $NUM_FILES tests"
            env TESTS="$(echo $FILES)" make -e -j2 check

    - name: print status
      if: failure()
      run: cat test-suite.log

  test_job5:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    env:
       JOB_NUMBER: 5
    steps:
    - uses: actions/checkout@v1

    - name: build
      run:  scripts/github_actions/build_ci.bash

    - name: Run prereq
      run:  test/functional/generate-cert.prereq

    - name: run check
      run: |
            FILES="$(scripts/github_actions/filter_bats_list.bash $JOB_NUMBER $NUM_JOBS)"
            NUM_FILES="$(echo $FILES | tr ' ' '\n' | wc -l)"
            echo "Running $NUM_FILES tests"
            env TESTS="$(echo $FILES)" make -e -j2 check

    - name: print status
      if: failure()
      run: cat test-suite.log

  test_job6:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    env:
       JOB_NUMBER: 6
    steps:
    - uses: actions/checkout@v1

    - name: build
      run:  scripts/github_actions/build_ci.bash

    - name: Run prereq
      run:  test/functional/generate-cert.prereq

    - name: run check
      run: |
            FILES="$(scripts/github_actions/filter_bats_list.bash $JOB_NUMBER $NUM_JOBS)"
            NUM_FILES="$(echo $FILES | tr ' ' '\n' | wc -l)"
            echo "Running $NUM_FILES tests"
            env TESTS="$(echo $FILES)" make -e -j2 check

    - name: print status
      if: failure()
      run: cat test-suite.log

  test_job7:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    env:
       JOB_NUMBER: 7
    steps:
    - uses: actions/checkout@v1

    - name: build
      run:  scripts/github_actions/build_ci.bash

    - name: Run prereq
      run:  test/functional/generate-cert.prereq

    - name: run check
      run: |
            FILES="$(scripts/github_actions/filter_bats_list.bash $JOB_NUMBER $NUM_JOBS)"
            NUM_FILES="$(echo $FILES | tr ' ' '\n' | wc -l)"
            echo "Running $NUM_FILES tests"
            env TESTS="$(echo $FILES)" make -e -j2 check

    - name: print status
      if: failure()
      run: cat test-suite.log

  test_job8:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    env:
       JOB_NUMBER: 8
    steps:
    - uses: actions/checkout@v1

    - name: build
      run:  scripts/github_actions/build_ci.bash

    - name: Run prereq
      run:  test/functional/generate-cert.prereq

    - name: run check
      run: |
            FILES="$(scripts/github_actions/filter_bats_list.bash $JOB_NUMBER $NUM_JOBS)"
            NUM_FILES="$(echo $FILES | tr ' ' '\n' | wc -l)"
            echo "Running $NUM_FILES tests"
            env TESTS="$(echo $FILES)" make -e -j2 check

    - name: print status
      if: failure()
      run: cat test-suite.log

  test_job9:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    env:
       JOB_NUMBER: 9
    steps:
    - uses: actions/checkout@v1

    - name: build
      run:  scripts/github_actions/build_ci.bash

    - name: Run prereq
      run:  test/functional/generate-cert.prereq

    - name: run check
      run: |
            FILES="$(scripts/github_actions/filter_bats_list.bash $JOB_NUMBER $NUM_JOBS)"
            NUM_FILES="$(echo $FILES | tr ' ' '\n' | wc -l)"
            echo "Running $NUM_FILES tests"
            env TESTS="$(echo $FILES)" make -e -j2 check

    - name: print status
      if: failure()
      run: cat test-suite.log

  test_job10:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    env:
       JOB_NUMBER: 10
    steps:
    - uses: actions/checkout@v1

    - name: build
      run:  scripts/github_actions/build_ci.bash

    - name: Run prereq
      run:  test/functional/generate-cert.prereq

    - name: run check
      run: |
            FILES="$(scripts/github_actions/filter_bats_list.bash $JOB_NUMBER $NUM_JOBS)"
            NUM_FILES="$(echo $FILES | tr ' ' '\n' | wc -l)"
            echo "Running $NUM_FILES tests"
            env TESTS="$(echo $FILES)" make -e -j2 check

    - name: print status
      if: failure()
      run: cat test-suite.log

  test_successful:
    runs-on: ubuntu-latest
    needs: [unit_and_style, test_job1, test_job2, test_job3, test_job4, test_job5, test_job6, test_job7, test_job8, test_job9, test_job10]
    steps:
    - name: Successful
      run:  echo "Successful"
